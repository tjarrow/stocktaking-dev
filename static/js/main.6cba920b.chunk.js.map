{"version":3,"sources":["validation/empty-check.js","logo.svg","components/Tree.js","components/Equipment.js","components/Versions.js","components/Scheme.js","utils/setAuthToken.js","actions/authActions.js","components/auth/Register.js","components/auth/Login.js","components/StartPage.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","value","undefined","Object","keys","length","trim","Tree","props","state","buildings","openNodes","this","setState","console","info","id","className","href","map","building","key","_id","onClick","toggleTree","bind","name","rooms","room","children","item","i","onToggleEqItem","React","Component","Equipment","handleChangeInput","e","target","handleAddItem","preventDefault","comp","itemName","room_name","Number","parseInt","itemCount","nextId","equipments","concat","localStorage","setItem","JSON","stringify","handleEditItem","index","log","itemId","count","showEditBtn","showAddBtn","showIdInput","showRoomInput","handleDeleteItem","filter","el","handleTransferItem","itemRoom","findItem","equipment","handleShowEditComponents","editByName","editById","itemNameValid","itemIdValid","fieldName","fieldValidationErrors","inputErrors","validateFormName","getItem","eq","parse","render","type","placeholder","onChange","min","Versions","Scheme","handleShowEqItem","showEqItem","numOfRepClicks","showEq","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","payload","Register","company_name","email","password","password2","errors","onSubmit","nextProps","auth","isAuthenticated","history","push","newUser","registerUser","error","connect","userData","dispatch","post","then","res","catch","err","response","data","withRouter","Login","loginUser","jwt_decode","StartPage","to","initialState","user","combineReducers","action","isEmpty","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","AppRouter","path","component","exact","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"m3FAMAA,EAAOC,QANS,SAAAC,GAAK,YACTC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BE,OAAOC,KAAKH,GAAOI,QAC/B,kBAAVJ,GAA8C,IAAxBA,EAAMK,OAAOD,S,mBCJ7CN,EAAOC,QAAU,IAA0B,kC,wOC+I5BO,E,YA3Ib,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,UAAW,GACXC,UAAW,IAJI,E,kFAYfC,KAAKC,SAAS,CAAEH,UAAWA,IAC3BI,QAAQC,KAAKL,K,iCAINM,GACT,IAAML,EAAYC,KAAKH,MAAME,eAEPT,IAAlBS,EAAUK,GACZL,EAAUK,IAAOL,EAAUK,GAE3BL,EAAUK,IAAM,EAGlBJ,KAAKC,SAAS,CAAEF,gB,+BAGR,IAAD,OACP,OACE,yBAAKK,GAAG,cACN,4BACE,uBAAGC,UAAU,gBAAgBC,KAAK,KAAlC,uGAIF,4BACmC,IAAhCN,KAAKH,MAAMC,UAAUL,QACpBO,KAAKH,MAAMC,UAAUS,KAAI,SAAAC,GACvB,OACE,wBAAIC,IAAKD,EAASE,KAChB,0BAAMC,QAAS,EAAKC,WAAWC,KAAK,EAAML,EAASE,MACjD,wBACEL,UACE,EAAKR,MAAME,UAAUS,EAASE,KAAO,MAAQ,WAGjD,uBAAGN,GAAE,UAAKI,EAASE,MAAQF,EAASM,OAEtC,wBACET,UACE,EAAKR,MAAME,UAAUS,EAASE,KAC1B,GACA,QAGLF,QACoBlB,IAAnBkB,EAASO,OACTP,EAASO,MAAMR,KAAI,SAAAS,GACjB,OACE,wBAAIP,IAAKO,EAAKZ,IACZ,0BAAMO,QAAS,EAAKC,WAAWC,KAAK,EAAMG,EAAKZ,KAC7C,wBACEC,UACE,EAAKR,MAAME,UAAUiB,EAAKZ,IACtB,MACA,WAGR,uBACEA,GAAE,UAAKY,EAAKZ,KAEXY,EAAKF,OAGV,wBACET,UACE,EAAKR,MAAME,UAAUiB,EAAKZ,IACtB,GACA,QAGLY,QACmB1B,IAAlB0B,EAAKC,UACLD,EAAKC,SAASV,KAAI,SAAAW,GAChB,OACE,wBAAIT,IAAKS,EAAKd,IACZ,8BACE,uBACEA,GAAE,UAAKc,EAAKd,IACZC,UAAS,UAAKa,EAAKJ,MACnBH,QAAS,EAAKC,WAAWC,KAAK,EAAMK,EAAKd,KAExCc,EAAKJ,OAGV,wBACET,UACE,EAAKR,MAAME,UAAUmB,EAAKd,IACtB,GACA,QAELc,QACmB5B,IAAlB4B,EAAKD,UACLC,EAAKD,SAASV,KAAI,SAAAY,GAChB,OACE,wBAAIV,IAAKU,EAAEf,IACT,8BACE,uBACEA,GAAE,UAAKe,EAAEf,IACTC,UAAS,UAAKc,EAAEL,MAChBH,QACE,EAAKf,MAAMwB,gBAGZD,EAAEL,gC,GArHpCO,IAAMC,W,gCCmQVC,E,YAhQb,WAAY3B,GAAQ,IAAD,8BACjB,4CAAMA,KAuBN4B,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAEC,OACXrC,EAAQqC,EAAOrC,MACfyB,EAAOY,EAAOZ,KACpB,EAAKb,SAAL,eACGa,EAAQzB,KA7BI,EAyDjBsC,cAAgB,SAACF,GACfA,EAAEG,iBACA,IAAIC,EAAO,CACT,KAAQ,EAAKhC,MAAMiC,SACnB,KAAQ,EAAKlC,MAAMmC,UACnB,MAASC,OAAOC,SAAS,EAAKpC,MAAMqC,WACpC,IAAOC,OAET,EAAKlC,SAAS,CAACmC,WAAY,EAAKvC,MAAMuC,WAAWC,OAAOR,KACxD,kBAAMS,aAAaC,QAAQ,aAAcC,KAAKC,UAAU,EAAK5C,MAAMuC,gBAEnElC,QAAQC,KAAK,cAEb,EAAKN,MAAMiC,SAAW,GACtB,EAAKjC,MAAMqC,UAAY,GAvEV,EA0EjBQ,eAAiB,SAACjB,GAChBA,EAAEG,iBACF,IAAIe,EAAQlB,EAAEC,OAAOrB,UACrBH,QAAQ0C,IAAID,GACZ,IAAK,IAAIxB,EAAI,EAAGA,EAAI,EAAKtB,MAAMuC,WAAW3C,OAAQ0B,IAC1C,EAAKtB,MAAMuC,WAAWjB,GAAGT,MAAQiC,IAClC,EAAK9C,MAAMuC,WAAWjB,GAAGT,IAAM,EAAKb,MAAMgD,OAC1C,EAAKhD,MAAMuC,WAAWjB,GAAGL,KAAO,EAAKjB,MAAMiC,SAC3C,EAAKjC,MAAMuC,WAAWjB,GAAG2B,MAASd,OAAOC,SAAS,EAAKpC,MAAMqC,WAC7DhC,QAAQC,KAAK,gBAGlB,EAAKF,SAAS,CACZmC,WAAY,EAAKvC,MAAMuC,WACvBS,OAAQ,GACRf,SAAU,GACVI,UAAW,EACXa,aAAc,EAAKlD,MAAMkD,YACzBC,YAAa,EAAKnD,MAAMmD,WACxBC,aAAc,EAAKpD,MAAMoD,YACzBC,eAAe,EAAKrD,MAAMqD,gBAE5B,kBAAMZ,aAAaC,QAAQ,aAAcC,KAAKC,UAAU,EAAK5C,MAAMuC,iBAhGtD,EAoGjBe,iBAAmB,SAAC1B,GAClB,IAAIkB,EAAQlB,EAAEC,OAAOtB,GACrBF,QAAQ0C,IAAID,GACZ,IAAMP,EAAa,EAAKvC,MAAMuC,WAAWgB,QAAO,SAAAC,GAAE,OAAIA,EAAG3C,MAAQiC,KACjE,EAAK1C,SAAS,CAACmC,eACf,kBAAME,aAAaC,QAAQ,aAAcC,KAAKC,UAAU,EAAK5C,MAAMuC,gBAEnElC,QAAQC,KAAK,EAAKN,MAAMuC,aA3GT,EA8GjBkB,mBAAqB,SAAC7B,GACpBA,EAAEG,iBAEF,IADA,IAAIe,EAAQlB,EAAEC,OAAOrB,UACZc,EAAI,EAAGA,EAAI,EAAKtB,MAAMuC,WAAW3C,OAAQ0B,IAC5C,EAAKtB,MAAMuC,WAAWjB,GAAGT,MAAQiC,IAClC,EAAK9C,MAAMuC,WAAWjB,GAAGH,KAAO,EAAKnB,MAAM0D,UAGhD,EAAKtD,SACH,CAAEmC,WAAY,EAAKvC,MAAMuC,WACvBS,OAAQ,GACRf,SAAU,GACVI,UAAW,EACXqB,SAAU,GACVR,aAAc,EAAKlD,MAAMkD,YACzBC,YAAa,EAAKnD,MAAMmD,WACxBC,aAAc,EAAKpD,MAAMoD,YACzBC,eAAe,EAAKrD,MAAMqD,gBAE5B,kBAAMZ,aAAaC,QAAQ,aAAcC,KAAKC,UAAU,EAAK5C,MAAMuC,iBAjItD,EAqInBoB,SAAW,SAACzB,GACV,OAAO,EAAKlC,MAAMuC,WACjBgB,QAAO,SAAC3B,GAAD,OAAOA,EAAET,OAASe,KACzBxB,KAAI,SAACkD,EAAWd,GAAZ,OACH,yBAAKtC,UAAU,kBACb,0BAAMW,KAAI,UAAKyC,EAAUzC,MAAQP,IAAKkC,GAAQc,EAAU3C,KAAxD,OAAkE2C,EAAUX,OAC5E,yBAAKzC,UAAU,YACb,4BAAQD,GAAE,UAAKqD,EAAU/C,KAAOC,QAAS,SAAAc,GAAC,OAAI,EAAK0B,iBAAiB1B,KAApE,8CACA,4BAAQpB,UAAS,UAAKoD,EAAU/C,KAAOC,QAAS,EAAK+C,0BAArD,yFA7IW,EAmJnBA,yBAA2B,SAACjC,GAC1B,IAAIkB,EAAQlB,EAAEC,OAAOrB,UACrB,EAAKR,MAAMgD,OAASF,EACpB,IAAK,IAAIxB,EAAI,EAAGA,EAAI,EAAKtB,MAAMuC,WAAW3C,OAAQ0B,IAC1C,EAAKtB,MAAMuC,WAAWjB,GAAGT,MAAQiC,IAClC,EAAK9C,MAAMiC,SAAW,EAAKjC,MAAMuC,WAAWjB,GAAGL,MAItDZ,QAAQC,KAAK,EAAKN,MAAMiC,UACxB5B,QAAQ0C,IAAI,EAAK/C,MAAMgD,QACvB,EAAK5C,SAAS,CACZ8C,aAAc,EAAKlD,MAAMkD,YACzBC,YAAa,EAAKnD,MAAMmD,WACxBC,aAAc,EAAKpD,MAAMoD,YACzBC,eAAe,EAAKrD,MAAMqD,iBAhK5B,EAAKrD,MAAQ,CACXuC,WAAY,GACZW,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,eAAe,EACfS,WAAW,GACX7B,SAAU,GACVe,OAAQ,GACRU,SAAS,GACTrB,UAAW,EACX0B,SAAS,GAETC,eAAe,EACfC,aAAa,GAEf,EAAKX,iBAAmB,EAAKA,iBAAiBtC,KAAtB,gBACxB,EAAKc,cAAgB,EAAKA,cAAcd,KAAnB,gBACrB,EAAK6B,eAAiB,EAAKA,eAAe7B,KAApB,gBACtB,EAAKyC,mBAAqB,EAAKA,mBAAmBzC,KAAxB,gBArBT,E,2EAoCHkD,EAAW1E,GACvB,IAAI2E,EAAwBhE,KAAKH,MAAMoE,YACnCJ,EAAgB7D,KAAKH,MAAMgE,cAEf,aAAdE,IAEFF,EAAgBxE,EAAMI,QAAU,EAChCuE,EAAsBlC,SAAW+B,EAAgB,GAAK,eAGtD7D,KAAKC,SAAS,CAACgE,YAAaD,EACdH,cAAeA,GAEd7D,KAAKkE,oB,yCAIhBlE,KAAKC,SAAS,CAAC4D,cAAe7D,KAAKH,MAAMgE,gBACzC3D,QAAQ0C,IAAI5C,KAAKH,MAAMoE,e,0CAmH7B,IAEMR,EAAYnB,aAAa6B,QAAQ,cACjCC,EAAOX,EAAYjB,KAAK6B,MAAMZ,GAHV,GAItBzD,KAAKC,SAAS,CACZmC,WAAYgC,IAGlBlE,QAAQ0C,IAAI,mB,2CAKZ5C,KAAKsE,W,6CAILpE,QAAQ0C,IAAI,4B,+BAGJ,IAAD,OACDb,EAAY/B,KAAKJ,MAAMmC,UAC7B,OACE,6BACE,0BAAM1B,UAAU,uBAAuBL,KAAKJ,MAAMmC,WAClD,0BAAM1B,UAAU,0BAAhB,kHACCL,KAAKwD,SAASzB,GACf,6BACE,0BAAM1B,UAAU,YACbL,KAAKH,MAAMoD,aACZ,8GAEE,2BACE5D,MAAOW,KAAKH,MAAMgD,OAClBxC,UAAU,qBACVkE,KAAK,OAAOzD,KAAK,SACjB0D,YAAY,KACZC,SAAUzE,KAAKwB,qBAInB,4JAEE,2BACEnB,UAAU,uBACVkE,KAAK,OAAOzD,KAAK,WACjBzB,MAAOW,KAAKH,MAAMiC,SAClB0C,YAAY,2BACZC,SAAU,SAAAhD,GAAC,OAAI,EAAKD,kBAAkBC,OAG1C,+FAEE,2BACEpB,UAAU,wBACVkE,KAAK,SACLG,IAAM,IACN5D,KAAK,YACLzB,MAAOW,KAAKH,MAAMqC,UAClBuC,SAAU,SAAAhD,GAAC,OAAI,EAAKD,kBAAkBC,OAEzCzB,KAAKH,MAAMmD,YACZ,4BAAQrC,QAAS,SAAAc,GAAC,OAAI,EAAKE,cAAcF,IAAKpB,UAAU,UAAxD,6HAECL,KAAKH,MAAMkD,aACZ,4BAAQpC,QAAS,SAAAc,GAAC,OAAI,EAAKiB,eAAejB,IAAIpB,UAAWL,KAAKH,MAAMgD,QAApE,2JAEC7C,KAAKH,MAAMkD,aACZ,2BAAO1C,UAAU,wBAAjB,6EACE,2BACEkE,KAAK,SACLzD,KAAK,WACL2D,SAAU,SAAAhD,GAAC,OAAI,EAAKD,kBAAkBC,OAGzCzB,KAAKH,MAAMkD,aACZ,4BAAQpC,QAAS,SAAAc,GAAC,OAAI,EAAK6B,mBAAmB7B,IAAIpB,UAAWL,KAAKH,MAAMgD,QAAxE,yJ,GAtPYxB,IAAMC,WCMfqD,E,iLAPb,OACE,yBAAKtE,UAAU,gBACb,4J,GAJiBgB,IAAMC,WCsDdsD,E,YAlDb,aAAe,IAAD,8BACZ,+CAUFC,iBAAmB,SAAApD,GACjB,IACIqD,GAAa,EADU,EAAKjF,MAAMO,KAAOqB,EAAEC,OAAOtB,IAGpD,EAAKH,SAAS,CAAC8E,eAAgB,EAAKlF,MAAMkF,eAAe,IACtD,EAAKlF,MAAMkF,eAAiB,IAAM,IACnCD,GAAa,IAGf,EAAK7E,SAAS,CAAC8E,eAAgB,IAEjC,EAAK9E,SAAU,CACb6E,aACA1E,GAAIqB,EAAEC,OAAOtB,GACb2B,UAAWN,EAAEC,OAAOrB,aAvBtB,EAAKR,MAAQ,CACXmF,QAAQ,EACRF,YAAY,EACZ1E,GAAI,GACJ2B,UAAW,GACXgD,eAAgB,GAPN,E,sEA8Bb,OACC,yBAAK1E,UAAU,aACf,kBAAC,EAAD,MACE,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEe,eAAgBpB,KAAK6E,oBAGzB,yBAAKxE,UAAU,eACTL,KAAKH,MAAMiF,YAEX,kBAAC,EAAD,CACE1E,GAAIJ,KAAKH,MAAMO,GACf2B,UAAW/B,KAAKH,MAAMkC,kB,GA5CfV,IAAMC,W,iCCOZ2D,EAVM,SAAAC,GACfA,EAEFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,e,iBCkDEC,EAAiB,SAAAC,GAC5B,MAAO,CACLjB,KAAM,mBACNkB,QAASD,I,QCtDPE,E,YAEJ,WAAY9F,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAM,CACT8F,aAAc,GACdC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,OAAQ,IAGV,EAAKtB,SAAW,EAAKA,SAAS5D,KAAd,gBAChB,EAAKmF,SAAW,EAAKA,SAASnF,KAAd,gBAXC,E,uFAcOoF,GACpBA,EAAUC,KAAKC,iBAEjBnG,KAAKJ,MAAMwG,QAAQC,KAAK,SAGtBJ,EAAUF,QACZ/F,KAAKC,SAAS,CAAE8F,OAAQE,EAAUF,W,0CAKhC/F,KAAKJ,MAAMsG,KAAKC,iBAElBnG,KAAKJ,MAAMwG,QAAQC,KAAK,W,+BAInB5E,GACPzB,KAAKC,SAAL,eAAiBwB,EAAEC,OAAOZ,KAAOW,EAAEC,OAAOrC,U,+BAGnCoC,GACPA,EAAEG,iBACF,IAAM0E,EAAU,CACdX,aAAc3F,KAAKH,MAAM8F,aACzBC,MAAO5F,KAAKH,MAAM+F,MAClBC,SAAU7F,KAAKH,MAAMgG,SACrBC,UAAW9F,KAAKH,MAAMiG,WAGxB9F,KAAKJ,MAAM2G,aAAaD,EAAStG,KAAKJ,MAAMwG,W,+BAGnC,IACDL,EAAW/F,KAAKH,MAAhBkG,OAER,OACE,yBAAK1F,UAAU,aACf,0BAAM2F,SAAUhG,KAAKgG,SAAU3F,UAAU,oBACrC,wBAAIA,UAAU,gBAAd,6HACA,2BACEA,UAAU,aACVS,KAAK,eACL0F,MAAOT,EAAOJ,aACdtG,MAAOW,KAAKH,MAAM8F,aAClBlB,SAAUzE,KAAKyE,SACfD,YAAY,mKAEd,2BACEnE,UAAU,aACVS,KAAK,QACL0F,MAAOT,EAAOH,MACdvG,MAAOW,KAAKH,MAAM+F,MAClBnB,SAAUzE,KAAKyE,SACfD,YAAY,8EAEd,2BACEnE,UAAU,aACVS,KAAK,WACL0F,MAAOT,EAAOF,SACdxG,MAAOW,KAAKH,MAAMgG,SAClBpB,SAAUzE,KAAKyE,SACfD,YAAY,kFACZD,KAAK,aAEP,2BACElE,UAAU,aACVS,KAAK,YACL0F,MAAOT,EAAOD,UACdzG,MAAOW,KAAKH,MAAMiG,UAClBrB,SAAUzE,KAAKyE,SACfD,YAAY,8FACZD,KAAK,aAEP,2BACEA,KAAK,SACLlF,MAAM,+GACNgB,UAAU,qB,GA9FCgB,IAAMC,WAiHdmF,eALO,SAAA5G,GAAK,MAAK,CAC9BqG,KAAMrG,EAAMqG,KACZH,OAAQlG,EAAMkG,UAKd,CAAEQ,aDrHwB,SAACG,EAAUN,GAAX,OAAuB,SAAAO,GACjDxB,IACGyB,KAAK,sBAAuBF,GAC5BG,MAAK,SAAAC,GAAG,OAAIV,EAAQC,KAAK,aACzBU,OAAM,SAAAC,GAAG,OACRL,EAAS,CACPpC,KAAM,aACNkB,QAASuB,EAAIC,SAASC,aC4GfT,CAGbU,YAAWzB,ICrHP0B,E,YAEJ,WAAYxH,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX+F,MAAM,GACNC,SAAS,GACTE,OAAQ,IAGV,EAAKtB,SAAW,EAAKA,SAAS5D,KAAd,gBAChB,EAAKmF,SAAW,EAAKA,SAASnF,KAAd,gBATC,E,uFAYOoF,GACpBA,EAAUC,KAAKC,iBAEjBnG,KAAKJ,MAAMwG,QAAQC,KAAK,SAGtBJ,EAAUF,QACZ/F,KAAKC,SAAS,CAAE8F,OAAQE,EAAUF,W,0CAKhC/F,KAAKJ,MAAMsG,KAAKC,iBAElBnG,KAAKJ,MAAMwG,QAAQC,KAAK,W,+BAInB5E,GACPzB,KAAKC,SAAL,eAAiBwB,EAAEC,OAAOZ,KAAOW,EAAEC,OAAOrC,U,+BAGnCoC,GACPA,EAAEG,iBACF,IAAM8E,EAAW,CACfd,MAAO5F,KAAKH,MAAM+F,MAClBC,SAAU7F,KAAKH,MAAMgG,UAEvB7F,KAAKJ,MAAMyH,UAAUX,K,+BAGZ,IACDX,EAAW/F,KAAKH,MAAhBkG,OAER,OACE,yBAAK1F,UAAU,aACb,0BAAM2F,SAAUhG,KAAKgG,SAAU3F,UAAU,oBACrC,wBAAIA,UAAU,gBAAd,+HACA,2BACEA,UAAU,aACVS,KAAK,QACL0D,YAAY,4EACZgC,MAAOT,EAAOH,MACdvG,MAAOW,KAAKH,MAAM+F,MAClBnB,SAAUzE,KAAKyE,SACfF,KAAK,UAEP,2BACElE,UAAU,aACVS,KAAK,WACL0D,YAAY,kFACZgC,MAAOT,EAAOF,SACdxG,MAAOW,KAAKH,MAAMgG,SAClBpB,SAAUzE,KAAKyE,SACfF,KAAK,aAEP,2BACEA,KAAK,SACLlF,MAAM,iCACNgB,UAAU,qB,GAzEJgB,IAAMC,WA4FXmF,eALS,SAAA5G,GAAK,MAAK,CAChCqG,KAAMrG,EAAMqG,KACZH,OAAQlG,EAAMkG,UAKd,CAAEsB,UFlFqB,SAAAX,GAAQ,OAAI,SAAAC,GACnCxB,IACGyB,KAAK,mBAAoBF,GACzBG,MAAK,SAAAC,GAAO,IAEH5B,EAAU4B,EAAII,KAAdhC,MAGR5C,aAAaC,QAAQ,WAAY2C,GAGjCD,EAAaC,GAGb,IAAMM,EAAU8B,IAAWpC,GAG3ByB,EAASpB,EAAeC,OAEzBuB,OAAM,SAAAC,GAAG,OACRL,EAAS,CACPpC,KAAM,aACNkB,QAASuB,EAAIC,SAASC,aE0DfT,CAGbW,GCpFaG,E,iLAZX,OACE,yBAAKlH,UAAU,cACb,wBAAIA,UAAU,gBAAd,+PACA,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAMmH,GAAG,SAASnH,UAAU,gBAA5B,kCACA,kBAAC,IAAD,CAAMmH,GAAG,YAAYnH,UAAU,iBAA/B,sH,GAPcgB,IAAMC,W,yCCDxBmG,EAAe,CACnBtB,iBAAiB,EACjBuB,KAAM,ICJFD,EAAe,GCINE,cAAgB,CAC7BzB,KFEa,WAAwC,IAA/BrG,EAA8B,uDAAtB4H,EAAcG,EAAQ,uCACpD,OAAQA,EAAOrD,MACb,IAAK,mBACH,OAAO,eACF1E,EADL,CAEEsG,iBAAkB0B,IAAQD,EAAOnC,SACjCiC,KAAME,EAAOnC,UAEjB,QACE,OAAO5F,IEVXkG,ODJa,WAAwC,IAA/BlG,EAA8B,uDAAtB4H,EAAcG,EAAQ,uCACpD,OAAQA,EAAOrD,MACb,IAAK,aACH,OAAOqD,EAAOnC,QAChB,QACE,OAAO5F,MEDPiI,EAAa,CAACC,KAWLC,EATDC,YACZC,EALmB,GAOnBC,YACEC,IAAe,WAAf,EAAmBN,GACnBO,OAAOC,8BAAgCD,OAAOC,iCCWnCC,EAfG,kBAChB,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,KAAK,IAAIC,UAAWlB,EAAWmB,OAAO,IAC7C,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWrB,EAAOsB,OAAO,IAC9C,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAW/C,EAAUgD,OAAO,IACpD,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAW7D,S,YCLrB+D,QACW,cAA7BN,OAAOO,SAASC,UAEe,UAA7BR,OAAOO,SAASC,UAEhBR,OAAOO,SAASC,SAASC,MACvB,2DCPNC,IAASzE,OAAO,kBAAC,EAAD,MAAc0E,SAASC,eAAe,SDwHhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvC,MAAK,SAAAwC,GACjCA,EAAaC,kB","file":"static/js/main.6cba920b.chunk.js","sourcesContent":["const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nmodule.exports = isEmpty;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport buildings from \"../buildings0.json\";\r\n\r\nclass Tree extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      buildings: [],\r\n      openNodes: {}\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // var buildings = new Scorocode.Query(\"buildings\");\r\n    //buildings.find().then(finded => {\r\n      //let buildings = finded.result;\r\n      this.setState({ buildings: buildings });\r\n      console.info(buildings);\r\n    //});\r\n  }\r\n\r\n  toggleTree(id) {\r\n    const openNodes = this.state.openNodes;\r\n\r\n    if (openNodes[id] !== undefined) {\r\n      openNodes[id] = !openNodes[id];\r\n    } else {\r\n      openNodes[id] = true;\r\n    }\r\n\r\n    this.setState({ openNodes });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"multi-tree\">\r\n        <h4>\r\n          <a className=\"scheme-header\" href=\"#\">\r\n            Схема  организации\r\n          </a>\r\n        </h4>\r\n        <ul>\r\n          {this.state.buildings.length !== 0 &&\r\n            this.state.buildings.map(building => {\r\n              return (\r\n                <li key={building._id}>\r\n                  <span onClick={this.toggleTree.bind(this, building._id)}>\r\n                    <em\r\n                      className={\r\n                        this.state.openNodes[building._id] ? \"???\" : \"marker\"\r\n                      }\r\n                    ></em>\r\n                    <a id={`${building._id}`}>{building.name}</a>\r\n                  </span>\r\n                  <ul\r\n                    className={\r\n                      this.state.openNodes[building._id]\r\n                        ? \"\"\r\n                        : \"hide\" /*display:none;*/\r\n                    }\r\n                  >\r\n                    {building &&\r\n                      building.rooms !== undefined &&\r\n                      building.rooms.map(room => {\r\n                        return (\r\n                          <li key={room.id}>\r\n                            <span onClick={this.toggleTree.bind(this, room.id)}>\r\n                              <em\r\n                                className={\r\n                                  this.state.openNodes[room.id]\r\n                                    ? \"???\"\r\n                                    : \"marker\"\r\n                                }\r\n                              ></em>\r\n                              <a\r\n                                id={`${room.id}`}\r\n                              >\r\n                                {room.name}\r\n                              </a>\r\n                            </span>\r\n                            <ul\r\n                              className={\r\n                                this.state.openNodes[room.id]\r\n                                  ? \"\"\r\n                                  : \"hide\" /*display:none;*/\r\n                              }\r\n                            >\r\n                              {room &&\r\n                                room.children !== undefined &&\r\n                                room.children.map(item => {\r\n                                  return (\r\n                                    <li key={item.id}>\r\n                                      <span>\r\n                                        <a\r\n                                          id={`${item.id}`}\r\n                                          className={`${item.name}`}\r\n                                          onClick={this.toggleTree.bind(this, item.id)}\r\n                                        >\r\n                                          {item.name}\r\n                                        </a>\r\n                                      </span>\r\n                                      <ul\r\n                                        className={\r\n                                          this.state.openNodes[item.id]\r\n                                            ? \"\"\r\n                                            : \"hide\" /*display:none;*/\r\n                                        }>\r\n                                        {item &&\r\n                                          item.children !== undefined &&\r\n                                          item.children.map(i => {\r\n                                            return (\r\n                                              <li key={i.id}>\r\n                                                <span>\r\n                                                  <a\r\n                                                    id={`${i.id}`}\r\n                                                    className={`${i.name}`}\r\n                                                    onClick={\r\n                                                      this.props.onToggleEqItem\r\n                                                    }\r\n                                                  >\r\n                                                    {i.name}\r\n                                                  </a>\r\n                                                </span>\r\n                                              </li>\r\n                                            );\r\n                                          })}\r\n                                      </ul>\r\n                                    </li>\r\n                                  );\r\n                                })}\r\n                            </ul>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                  </ul>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Tree;\r\n","import React, { Component } from 'react';\r\nimport {InputErrors} from './InputErrors.js';\r\n// import equipment from \"../equipment.json\";\r\nimport nextId from \"react-id-generator\";\r\n\r\nclass Equipment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      equipments: [],\r\n      showEditBtn: false,\r\n      showAddBtn: true,\r\n      showIdInput: false,\r\n      showRoomInput: true,\r\n      editByName:'',\r\n      itemName: '',\r\n      itemId: '',\r\n      itemRoom:'',\r\n      itemCount: 1,\r\n      editById:'',\r\n      // inputErrors: {itemName: '', itemId: ''},\r\n      itemNameValid: false,\r\n      itemIdValid: false\r\n    };\r\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n    this.handleAddItem = this.handleAddItem.bind(this);\r\n    this.handleEditItem = this.handleEditItem.bind(this);\r\n    this.handleTransferItem = this.handleTransferItem.bind(this);\r\n  }\r\n\r\n    handleChangeInput = (e) => {\r\n      const target = e.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n      this.setState ({\r\n        [name] : value\r\n      }\r\n      //,\r\n      //() => { this.validateField(name, value) }\r\n    );\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n      let fieldValidationErrors = this.state.inputErrors;\r\n      let itemNameValid = this.state.itemNameValid;\r\n      // let itemIdValid = this.state.itemIdValid;\r\n    if (fieldName === 'itemName')\r\n    {\r\n      itemNameValid = value.length >= 6;\r\n      fieldValidationErrors.itemName = itemNameValid ? '' : ' is invalid';\r\n    }\r\n\r\n      this.setState({inputErrors: fieldValidationErrors,\r\n                    itemNameValid: itemNameValid,\r\n                    // itemIdValid: itemIdValid\r\n                  }, this.validateFormName);\r\n      }\r\n\r\n      validateFormName() {\r\n          this.setState({itemNameValid: this.state.itemNameValid });\r\n          console.log(this.state.inputErrors);\r\n      }\r\n\r\n    handleAddItem = (e) => {\r\n      e.preventDefault();\r\n        let comp = {\r\n          \"name\": this.state.itemName,\r\n          \"room\": this.props.room_name,\r\n          \"count\": Number.parseInt(this.state.itemCount),\r\n          \"_id\": nextId()\r\n        };\r\n        this.setState({equipments: this.state.equipments.concat(comp)},\r\n        () => localStorage.setItem('equipments', JSON.stringify(this.state.equipments))\r\n      );\r\n        console.info(\"Item added\");\r\n\r\n        this.state.itemName = '';\r\n        this.state.itemCount = 1;\r\n    }\r\n\r\n    handleEditItem = (e) => {\r\n      e.preventDefault();\r\n      var index = e.target.className;\r\n      console.log(index);\r\n      for (var i = 0; i < this.state.equipments.length; i++) {\r\n           if(this.state.equipments[i]._id === index) {\r\n             this.state.equipments[i]._id = this.state.itemId;\r\n             this.state.equipments[i].name = this.state.itemName;\r\n             this.state.equipments[i].count =  Number.parseInt(this.state.itemCount);\r\n             console.info(\"Item edited\");\r\n            }\r\n        }\r\n        this.setState({\r\n          equipments: this.state.equipments,\r\n          itemId: '',\r\n          itemName: '',\r\n          itemCount: 1,\r\n          showEditBtn: !this.state.showEditBtn,\r\n          showAddBtn: !this.state.showAddBtn,\r\n          showIdInput: !this.state.showIdInput,\r\n          showRoomInput:!this.state.showRoomInput\r\n        },\r\n        () => localStorage.setItem('equipments', JSON.stringify(this.state.equipments))\r\n      );\r\n    }\r\n\r\n    handleDeleteItem = (e) => {\r\n      var index = e.target.id;\r\n      console.log(index);\r\n      const equipments = this.state.equipments.filter(el => el._id !== index);\r\n      this.setState({equipments},\r\n      () => localStorage.setItem('equipments', JSON.stringify(this.state.equipments))\r\n      );\r\n      console.info(this.state.equipments);\r\n    }\r\n\r\n    handleTransferItem = (e) => {\r\n      e.preventDefault();\r\n      var index = e.target.className;\r\n      for (var i = 0; i < this.state.equipments.length; i++) {\r\n         if(this.state.equipments[i]._id === index) {\r\n           this.state.equipments[i].room = this.state.itemRoom;\r\n       }\r\n      }\r\n      this.setState(\r\n        { equipments: this.state.equipments,\r\n          itemId: '',\r\n          itemName: '',\r\n          itemCount: 1,\r\n          itemRoom: '',\r\n          showEditBtn: !this.state.showEditBtn,\r\n          showAddBtn: !this.state.showAddBtn,\r\n          showIdInput: !this.state.showIdInput,\r\n          showRoomInput:!this.state.showRoomInput\r\n        },\r\n        () => localStorage.setItem('equipments', JSON.stringify(this.state.equipments))\r\n      );\r\n    }\r\n\r\n  findItem = (room_name) => {\r\n    return this.state.equipments\r\n    .filter((e) => e.room === room_name)\r\n    .map((equipment, index) => (\r\n      <div className=\"equipment-item\">\r\n        <span room={`${equipment.room}`} key={index}>{equipment.name} - x{equipment.count}</span>\r\n        <div className='btn-wrap'>\r\n          <button id={`${equipment._id}`} onClick={e => this.handleDeleteItem(e)}>Удалить</button>\r\n          <button className={`${equipment._id}`} onClick={this.handleShowEditComponents}>Редактировать </button>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  handleShowEditComponents = (e) => {\r\n    var index = e.target.className;\r\n    this.state.itemId = index;\r\n    for (var i = 0; i < this.state.equipments.length; i++) {\r\n         if(this.state.equipments[i]._id === index) {\r\n           this.state.itemName = this.state.equipments[i].name;\r\n         }\r\n      }\r\n  //  this.state.editByName = item.name;\r\n    console.info(this.state.itemName);\r\n    console.log(this.state.itemId);\r\n    this.setState({\r\n      showEditBtn: !this.state.showEditBtn,\r\n      showAddBtn: !this.state.showAddBtn,\r\n      showIdInput: !this.state.showIdInput,\r\n      showRoomInput:!this.state.showRoomInput\r\n    });\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const default_equipment = [];\r\n\r\n    const equipment = localStorage.getItem('equipments');\r\n    const eq  =  equipment ? JSON.parse(equipment ) : default_equipment;\r\n        this.setState({\r\n          equipments: eq\r\n        });\r\n\r\n    console.log('Fetching data');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\r\n    this.render();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Component will unmount');\r\n  }\r\n\r\n  render() {\r\n    const room_name = this.props.room_name;\r\n    return (\r\n      <div>\r\n        <span className=\"room_number__header\">{this.props.room_name}</span>\r\n        <span className=\"equipment-item__header\">Список оборудования:</span>\r\n        {this.findItem(room_name)}\r\n        <div>\r\n          <form className='add-item'>\r\n            {this.state.showIdInput  &&\r\n            <label>\r\n              ID оборудования:\r\n              <input\r\n                value={this.state.itemId}\r\n                className='add-item-id__input'\r\n                type='text' name='itemId'\r\n                placeholder='ID'\r\n                onChange={this.handleChangeInput}\r\n                />\r\n            </label>\r\n            }\r\n            <label>\r\n              Название оборудования:\r\n              <input\r\n                className='add-item-name__input'\r\n                type='text' name='itemName'\r\n                value={this.state.itemName}\r\n                placeholder='Стол'\r\n                onChange={e => this.handleChangeInput(e)}\r\n                 />\r\n            </label>\r\n            <label>\r\n              Количество:\r\n              <input\r\n                className='add-item-count__input'\r\n                type='number'\r\n                min = '1'\r\n                name='itemCount'\r\n                value={this.state.itemCount}\r\n                onChange={e => this.handleChangeInput(e)} />\r\n            </label>\r\n            {this.state.showAddBtn &&\r\n            <button onClick={e => this.handleAddItem(e)}  className=\"button\">Добавить оборудование</button>\r\n            }\r\n            {this.state.showEditBtn &&\r\n            <button onClick={e => this.handleEditItem(e)} className={this.state.itemId}>Редактировать оборудование</button>\r\n            }\r\n            {this.state.showEditBtn &&\r\n            <label className='add-item-room__input'>Номер комнаты:\r\n              <input\r\n                type=\"number\"\r\n                name='itemRoom'\r\n                onChange={e => this.handleChangeInput(e)} />\r\n                </label>\r\n            }\r\n            {this.state.showEditBtn &&\r\n            <button onClick={e => this.handleTransferItem(e)} className={this.state.itemId}>Перенести в другую комнату </button>\r\n            }\r\n          </form>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Equipment;\r\n","import React from 'react';\r\n\r\nclass Versions extends React.Component {\r\nrender () {\r\n  return (\r\n    <div className=\"version-info\">\r\n      <span>Текущий номер версии: 1.1.0</span>\r\n    </div>\r\n  )\r\n}\r\n}\r\nexport default Versions;\r\n","import React from 'react';\r\nimport Tree from './Tree';\r\nimport Equipment from './Equipment';\r\nimport Versions from './Versions';\r\n\r\nclass Scheme extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showEq: false,\r\n      showEqItem: false,\r\n      id: '',\r\n      room_name: '',\r\n      numOfRepClicks: 0\r\n    };\r\n  }\r\n\r\n  handleShowEqItem = e => {\r\n    const clickedSameButton = (this.state.id === e.target.id);\r\n    let showEqItem = true;\r\n    if(clickedSameButton) {\r\n      this.setState({numOfRepClicks: this.state.numOfRepClicks+1});\r\n      if(this.state.numOfRepClicks % 2 === 0) {\r\n        showEqItem = false;\r\n      }\r\n    } else {\r\n      this.setState({numOfRepClicks: 0});\r\n    }\r\n    this.setState ({\r\n      showEqItem,\r\n      id: e.target.id,\r\n      room_name: e.target.className\r\n    });\r\n  }\r\n\r\n  render() {\r\n   return (\r\n    <div className=\"container\">\r\n    <Versions/>\r\n      <div className=\"panel-left\">\r\n        <Tree\r\n          onToggleEqItem={this.handleShowEqItem}\r\n        />\r\n    </div>\r\n      <div className=\"panel-right\">\r\n          { this.state.showEqItem\r\n            &&\r\n            <Equipment\r\n              id={this.state.id}\r\n              room_name={this.state.room_name}\r\n            /> }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Scheme;\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    //Apply to every request\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: \"GET_ERRORS\",\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - Get User Token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localstorage\r\n      const { token } = res.data;\r\n\r\n      // Set token to ls\r\n      localStorage.setItem(\"jwtToken\", token);\r\n\r\n      // Set token to the auth header\r\n      setAuthToken(token);\r\n\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: \"GET_ERRORS\",\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove the token from ls\r\n  localStorage.removeItem(\"jwtToken\");\r\n\r\n  // Remove the auth header for future requests\r\n  setAuthToken(false);\r\n\r\n  // Set the current user to the empty object and isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: \"SET_CURRENT_USER\",\r\n    payload: decoded\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\n// import input from \"../common/input\";\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      company_name: '',\r\n      email: '',\r\n      password: '',\r\n      password2: '',\r\n      errors: {}\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // Send to the main page\r\n      this.props.history.push(\"/view\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      // Send to the main page\r\n      this.props.history.push(\"/view\");\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      company_name: this.state.company_name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  }\r\n\r\n  render () {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"auth-form\">\r\n      <form onSubmit={this.onSubmit} className=\"auth-btn-wrapper\">\r\n          <h2 className=\"start-header\">Зарегистрируйтесь в Stocktaking</h2>\r\n          <input\r\n            className=\"auth-input\"\r\n            name=\"company_name\"\r\n            error={errors.company_name}\r\n            value={this.state.company_name}\r\n            onChange={this.onChange}\r\n            placeholder=\"Введите название организации\"\r\n          />\r\n          <input\r\n            className=\"auth-input\"\r\n            name=\"email\"\r\n            error={errors.email}\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n            placeholder=\"Введите логин\"\r\n          />\r\n          <input\r\n            className=\"auth-input\"\r\n            name=\"password\"\r\n            error={errors.password}\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n            placeholder=\"Введите пароль\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            className=\"auth-input\"\r\n            name=\"password2\"\r\n            error={errors.password2}\r\n            value={this.state.password2}\r\n            onChange={this.onChange}\r\n            placeholder=\"Повторите пароль\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Зарегистрироваться\"\r\n            className=\"auth-input\"\r\n          />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateProps,\r\n  { registerUser }\r\n)(withRouter(Register));\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\n// import TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email:'',\r\n      password:'',\r\n      errors: {}\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // Send to the main page\r\n      this.props.history.push(\"/view\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      // Send to the main page\r\n      this.props.history.push(\"/view\");\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.loginUser(userData);\r\n  }\r\n\r\n  render () {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"auth-form\">\r\n        <form onSubmit={this.onSubmit} className=\"auth-btn-wrapper\">\r\n            <h2 className=\"start-header\">Войдите в ваш аккаунт Stocktaking</h2>\r\n            <input\r\n              className=\"auth-input\"\r\n              name=\"email\"\r\n              placeholder=\"Введите логин\"\r\n              error={errors.email}\r\n              value={this.state.email}\r\n              onChange={this.onChange}\r\n              type=\"email\"\r\n            />\r\n            <input\r\n              className=\"auth-input\"\r\n              name=\"password\"\r\n              placeholder=\"Введите пароль\"\r\n              error={errors.password}\r\n              value={this.state.password}\r\n              onChange={this.onChange}\r\n              type=\"password\"\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Войти\"\r\n              className=\"auth-input\"\r\n            />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLogin.propTypes = { // для проверки корректности типов вводимых данных\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect( //ES6 synthax\r\n  mapStateToProps,\r\n  { loginUser } // чтобы вытащить именно одно свойство из класса loginUser\r\n)(Login);\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass StartPage extends React.Component{\r\n  render () {\r\n    return (\r\n      <div className=\"start-page\">\r\n        <h1 className=\"start-header\">Приложение для просмотра оборудования в офисах</h1>\r\n        <div className=\"start-btn-wrapper\">\r\n          <Link to=\"/login\" className=\"login-button\">Войти</Link>\r\n          <Link to=\"/register\" className=\"signup-button\">Зарегистрироваться</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StartPage;\r\n","import isEmpty from \"../validation/empty-check\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_USER\":\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_ERRORS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {BrowserRouter, Route, Switch, Link, NavLink} from 'react-router-dom';\r\nimport Scheme from '../components/Scheme.js';\r\nimport Register from '../components/auth/Register.js';\r\nimport Login from '../components/auth/Login.js';\r\nimport StartPage from '../components/StartPage.js';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../store\";\r\n\r\nconst AppRouter = () => (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/\" component={StartPage} exact={true}/>\r\n          <Route path=\"/login\" component={Login} exact={true}/>\r\n          <Route path=\"/register\" component={Register} exact={true}/>\r\n          <Route path=\"/view\" component={Scheme} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nexport default AppRouter;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/styles.scss';\n// import 'normalize.css/normalize.css';\nimport Scheme from './components/Scheme';\nimport AppRouter from './routers/AppRouter';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<AppRouter/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}