{"version":3,"sources":["logo.svg","components/Tree.js","components/Equipment.js","components/Versions.js","components/Scheme.js","components/auth/Register.js","components/auth/Login.js","components/StartPage.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","Tree","props","state","buildings","openNodes","this","setState","console","info","id","undefined","className","href","length","map","building","key","_id","onClick","toggleTree","bind","name","rooms","room","children","item","i","onToggleEqItem","React","Component","Equipment","handleChangeItem","e","target","value","handleAddItem","preventDefault","comp","itemName","room_name","Number","parseInt","itemCount","nextId","equipments","concat","render","handleEditItem","index","log","itemId","count","findItem","filter","equipment","handleDeleteItem","handleShowEditComponents","editById","showEditBtn","showAddBtn","showIdInput","showRoomInput","el","editByName","type","placeholder","onChange","min","Versions","Scheme","handleShowEqItem","showEqItem","numOfRepClicks","showEq","Register","company_name","email","password","password2","errors","onSubmit","nextProps","auth","isAuthenticated","history","push","newUser","registerUser","error","Login","userData","loginUser","StartPage","to","AppRouter","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71d55e0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport buildings from \"../buildings0.json\";\r\n\r\nclass Tree extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      buildings: [],\r\n      openNodes: {}\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // var buildings = new Scorocode.Query(\"buildings\");\r\n    //buildings.find().then(finded => {\r\n      //let buildings = finded.result;\r\n      this.setState({ buildings: buildings });\r\n      console.info(buildings);\r\n    //});\r\n  }\r\n\r\n  toggleTree(id) {\r\n    const openNodes = this.state.openNodes;\r\n\r\n    if (openNodes[id] !== undefined) {\r\n      openNodes[id] = !openNodes[id];\r\n    } else {\r\n      openNodes[id] = true;\r\n    }\r\n\r\n    this.setState({ openNodes });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"multi-tree\">\r\n        <h4>\r\n          <a className=\"scheme-header\" href=\"#\">\r\n            Схема  организации\r\n          </a>\r\n        </h4>\r\n        <ul>\r\n          {this.state.buildings.length !== 0 &&\r\n            this.state.buildings.map(building => {\r\n              return (\r\n                <li key={building._id}>\r\n                  <span onClick={this.toggleTree.bind(this, building._id)}>\r\n                    <em\r\n                      className={\r\n                        this.state.openNodes[building._id] ? \"???\" : \"marker\"\r\n                      }\r\n                    ></em>\r\n                    <a id={`${building._id}`}>{building.name}</a>\r\n                  </span>\r\n                  <ul\r\n                    className={\r\n                      this.state.openNodes[building._id]\r\n                        ? \"\"\r\n                        : \"hide\" /*display:none;*/\r\n                    }\r\n                  >\r\n                    {building &&\r\n                      building.rooms !== undefined &&\r\n                      building.rooms.map(room => {\r\n                        return (\r\n                          <li key={room.id}>\r\n                            <span onClick={this.toggleTree.bind(this, room.id)}>\r\n                              <em\r\n                                className={\r\n                                  this.state.openNodes[room.id]\r\n                                    ? \"???\"\r\n                                    : \"marker\"\r\n                                }\r\n                              ></em>\r\n                              <a\r\n                                id={`${room.id}`}\r\n                              >\r\n                                {room.name}\r\n                              </a>\r\n                            </span>\r\n                            <ul\r\n                              className={\r\n                                this.state.openNodes[room.id]\r\n                                  ? \"\"\r\n                                  : \"hide\" /*display:none;*/\r\n                              }\r\n                            >\r\n                              {room &&\r\n                                room.children !== undefined &&\r\n                                room.children.map(item => {\r\n                                  return (\r\n                                    <li key={item.id}>\r\n                                      <span>\r\n                                        <a\r\n                                          id={`${item.id}`}\r\n                                          className={`${item.name}`}\r\n                                          onClick={this.toggleTree.bind(this, item.id)}\r\n                                        >\r\n                                          {item.name}\r\n                                        </a>\r\n                                      </span>\r\n                                      <ul\r\n                                        className={\r\n                                          this.state.openNodes[item.id]\r\n                                            ? \"\"\r\n                                            : \"hide\" /*display:none;*/\r\n                                        }>\r\n                                        {item &&\r\n                                          item.children !== undefined &&\r\n                                          item.children.map(i => {\r\n                                            return (\r\n                                              <li key={i.id}>\r\n                                                <span>\r\n                                                  <a\r\n                                                    id={`${i.id}`}\r\n                                                    className={`${i.name}`}\r\n                                                    onClick={\r\n                                                      this.props.onToggleEqItem\r\n                                                    }\r\n                                                  >\r\n                                                    {i.name}\r\n                                                  </a>\r\n                                                </span>\r\n                                              </li>\r\n                                            );\r\n                                          })}\r\n                                      </ul>\r\n                                    </li>\r\n                                  );\r\n                                })}\r\n                            </ul>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                  </ul>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Tree;\r\n","import React from 'react';\r\nimport equipment from \"../equipment.json\";\r\nimport nextId from \"react-id-generator\";\r\n\r\nclass Equipment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      equipments: [],\r\n      showEditBtn: false,\r\n      showAddBtn: true,\r\n      showIdInput: false,\r\n      showRoomInput: true,\r\n      editById: '',\r\n      editByName:'',\r\n      itemName: '',\r\n      itemId: '',\r\n      itemCount: 1,\r\n      editById: this.props.editById\r\n    };\r\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n    this.handleAddItem = this.handleAddItem.bind(this);\r\n    this.handleEditItem = this.handleEditItem.bind(this);\r\n  }\r\n\r\n    handleChangeItem = (e) => {\r\n      const target = e.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n      this.setState ({\r\n        [name] : value\r\n      });\r\n    }\r\n\r\n    handleAddItem = (e) => {\r\n      e.preventDefault();\r\n        let comp = {\r\n          \"name\": this.state.itemName,\r\n          \"room\": this.props.room_name,\r\n          \"count\": Number.parseInt(this.state.itemCount),\r\n          \"_id\": nextId()\r\n        };\r\n        this.setState({equipments: this.state.equipments.concat(comp)});\r\n        console.info(\"Item added\");\r\n          this.render();\r\n    }\r\n\r\n    handleEditItem = (e) => {\r\n      e.preventDefault();\r\n      var index = e.target.className;\r\n      console.log(index);\r\n\r\n        for (var i = 0; i < this.state.equipments.length; i++) {\r\n             if(this.state.equipments[i]._id === index) {\r\n               this.state.equipments[i]._id = this.state.itemId;\r\n               this.state.equipments[i].name = this.state.itemName;\r\n               this.state.equipments[i].count =  Number.parseInt(this.state.itemCount);\r\n               console.info(\"Item edited\");\r\n              }\r\n          }\r\n    }\r\n  findItem = (room_name) => {\r\n    return this.state.equipments\r\n    .filter((e) => e.room === room_name)\r\n    .map((equipment, index) => (\r\n      <div className=\"equipment-item\">\r\n        <span room={`${equipment.room}`} key={index}>{equipment.name} - x{equipment.count}</span>\r\n        <div className='btn-wrap'>\r\n          <button id={`${equipment._id}`} onClick={e => this.handleDeleteItem(e)}>Удалить</button>\r\n          <button className={`${equipment._id}`} onClick={this.handleShowEditComponents}>Редактировать </button>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  handleShowEditComponents = (e) => {\r\n    this.setState({\r\n      editById: e.target.className,\r\n      showEditBtn: !this.state.showEditBtn,\r\n      showAddBtn: !this.state.showAddBtn,\r\n      showIdInput: !this.state.showIdInput,\r\n      showRoomInput:!this.state.showRoomInput\r\n    });\r\n    console.log(this.state.editById);\r\n  }\r\n\r\n  handleDeleteItem = (e) => {\r\n    var index = e.target.id;\r\n    console.log(index);\r\n    const equipments = this.state.equipments.filter(el => el._id !== index);\r\n    this.setState({equipments}, console.log);\r\n    console.info(this.state.equipments);\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setState({\r\n        equipments: equipment\r\n      });\r\n      console.info(equipment);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    const room_name = this.props.room_name;\r\n    return (\r\n      <div>\r\n        <span className=\"room_number__header\">{this.props.room_name}</span>\r\n        <span className=\"equipment-item__header\">Список оборудования:</span>\r\n        {this.findItem(room_name)}\r\n        <div>\r\n          <form className='add-item'>\r\n            {this.state.showIdInput  &&\r\n            <label>\r\n              ID оборудования:\r\n              <input\r\n                className='add-item-id__input'\r\n                type='text' name='itemId'\r\n                placeholder='ID'\r\n                onChange={e => this.handleChangeItem(e)} />\r\n            </label>\r\n            }\r\n            <label>\r\n              Название оборудования:\r\n              <input\r\n                className='add-item-name__input'\r\n                type='text' name='itemName'\r\n                value={this.state.itemName}\r\n                placeholder='Стол'\r\n                onChange={e => this.handleChangeItem(e)} />\r\n            </label>\r\n\r\n            <label>\r\n              Количество:\r\n              <input\r\n                className='add-item-count__input'\r\n                type='number'\r\n                min = '1'\r\n                name='itemCount'\r\n                value={this.state.itemCount}\r\n                onChange={e => this.handleChangeItem(e)} />\r\n            </label>\r\n            {this.state.showAddBtn &&\r\n            <button onClick={e => this.handleAddItem(e)}  className=\"button\">Добавить оборудование</button>\r\n            }\r\n            {this.state.showEditBtn &&\r\n            <button onClick={e => this.handleEditItem(e)}  className={this.state.editById}>Редактировать оборудование</button>\r\n            }\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Equipment;\r\n","import React from 'react';\r\n\r\nclass Versions extends React.Component {\r\nrender () {\r\n  return (\r\n    <div className=\"version-info\">\r\n      <span>Текущий номер версии: 1.1.0</span>\r\n    </div>\r\n  )\r\n}\r\n}\r\nexport default Versions;\r\n","import React from 'react';\r\nimport Tree from './Tree';\r\nimport Equipment from './Equipment';\r\nimport Versions from './Versions';\r\n\r\nclass Scheme extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showEq: false,\r\n      showEqItem: false,\r\n      id: '',\r\n      room_name: '',\r\n      numOfRepClicks: 0\r\n    };\r\n  }\r\n\r\n  handleShowEqItem = e => {\r\n    const clickedSameButton = (this.state.id === e.target.id);\r\n    let showEqItem = true;\r\n    if(clickedSameButton) {\r\n      this.setState({numOfRepClicks: this.state.numOfRepClicks+1});\r\n      if(this.state.numOfRepClicks % 2 === 0) {\r\n        showEqItem = false;\r\n      }\r\n    } else {\r\n      this.setState({numOfRepClicks: 0});\r\n    }\r\n    this.setState ({\r\n      showEqItem,\r\n      id: e.target.id,\r\n      room_name: e.target.className\r\n    });\r\n  }\r\n\r\n  render() {\r\n   return (\r\n    <div className=\"container\">\r\n    <Versions/>\r\n      <div className=\"panel-left\">\r\n        <Tree\r\n          onToggleEqItem={this.handleShowEqItem}\r\n        />\r\n    </div>\r\n      <div className=\"panel-right\">\r\n          { this.state.showEqItem\r\n            &&\r\n            <Equipment\r\n              id={this.state.id}\r\n              room_name={this.state.room_name}\r\n            /> }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Scheme;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { registerUser } from \"../../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\n// import input from \"../common/input\";\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      company_name: '',\r\n      email: '',\r\n      password: '',\r\n      password2: '',\r\n      errors: {}\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // Send to the main page\r\n      this.props.history.push(\"/view\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      // Send to the main page\r\n      this.props.history.push(\"/view\");\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      company_name: this.state.company_name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  }\r\n\r\n  render () {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"auth-form\">\r\n      <form onSubmit={this.onSubmit} className=\"auth-btn-wrapper\">\r\n          <h2 className=\"start-header\">Зарегистрируйтесь в Stocktaking</h2>\r\n          <input\r\n            className=\"auth-input\"\r\n            name=\"company_name\"\r\n            error={errors.company_name}\r\n            value={this.state.company_name}\r\n            onChange={this.onChange}\r\n            placeholder=\"Введите название организации\"\r\n          />\r\n          <input\r\n            className=\"auth-input\"\r\n            name=\"email\"\r\n            error={errors.email}\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n            placeholder=\"Введите логин\"\r\n          />\r\n          <input\r\n            className=\"auth-input\"\r\n            name=\"password\"\r\n            error={errors.password}\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n            placeholder=\"Введите пароль\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            className=\"auth-input\"\r\n            name=\"password2\"\r\n            error={errors.password2}\r\n            value={this.state.password2}\r\n            onChange={this.onChange}\r\n            placeholder=\"Повторите пароль\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Зарегистрироваться\"\r\n            className=\"auth-input\"\r\n          />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default Register;\r\n// export default connect(\r\n//   mapStateProps,\r\n//   { registerUser }\r\n// )(withRouter(Register));\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n// import { loginUser } from \"../../actions/authActions\";\r\n// import TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email:'',\r\n      password:'',\r\n      errors: {}\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      // Send to the main page\r\n      this.props.history.push(\"/view\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      // Send to the main page\r\n      this.props.history.push(\"/view\");\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.loginUser(userData);\r\n  }\r\n\r\n  render () {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"auth-form\">\r\n        <form onSubmit={this.onSubmit} className=\"auth-btn-wrapper\">\r\n            <h2 className=\"start-header\">Войдите в ваш аккаунт Stocktaking</h2>\r\n            <input\r\n              className=\"auth-input\"\r\n              name=\"email\"\r\n              placeholder=\"Введите логин\"\r\n              error={errors.email}\r\n              value={this.state.email}\r\n              onChange={this.onChange}\r\n              type=\"email\"\r\n            />\r\n            <input\r\n              className=\"auth-input\"\r\n              name=\"password\"\r\n              placeholder=\"Введите пароль\"\r\n              error={errors.password}\r\n              value={this.state.password}\r\n              onChange={this.onChange}\r\n              type=\"password\"\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Войти\"\r\n              className=\"auth-input\"\r\n            />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLogin.propTypes = { // для проверки корректности типов вводимых данных\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\n// export default connect( //ES6 synthax\r\n//   mapStateToProps,\r\n//   { loginUser } // чтобы вытащить именно одно свойство из класса loginUser\r\n// )(Login);\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass StartPage extends React.Component{\r\n  render () {\r\n    return (\r\n      <div className=\"start-page\">\r\n        <h1 className=\"start-header\">Приложение для просмотра оборудования в офисах</h1>\r\n        <div className=\"start-btn-wrapper\">\r\n          <Link to=\"/login\" className=\"login-button\">Войти</Link>\r\n          <Link to=\"/register\" className=\"signup-button\">Зарегистрироваться</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StartPage;\r\n","import React from 'react';\r\nimport {BrowserRouter, Route, Switch, Link, NavLink} from 'react-router-dom';\r\nimport Scheme from '../components/Scheme.js';\r\nimport Register from '../components/auth/Register.js';\r\nimport Login from '../components/auth/Login.js';\r\nimport StartPage from '../components/StartPage.js';\r\nimport { Provider } from \"react-redux\";\r\n// import store from \"../store\";\r\n\r\nconst AppRouter = () => (\r\n  <Provider >\r\n    <BrowserRouter>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/\" component={StartPage} exact={true}/>\r\n          <Route path=\"/login\" component={Login} exact={true}/>\r\n          <Route path=\"/register\" component={Register} exact={true}/>\r\n          <Route path=\"/view\" component={Scheme} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nexport default AppRouter;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/styles.scss';\n// import 'normalize.css/normalize.css';\nimport Scheme from './components/Scheme';\nimport AppRouter from './routers/AppRouter';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<AppRouter/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}